#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ Advanced Sprinkler.
"""

import asyncio
from roblox_garden.config.settings import Settings
from roblox_garden.websocket.client import WebSocketClient
from roblox_garden.filters.item_filters import RobloxGardenFilter
from roblox_garden.utils.static_rarity_db import StaticRarityDatabase
from roblox_garden.models.shop import ItemType

async def check_advanced_sprinkler():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Advanced Sprinkler."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Advanced Sprinkler")
    print("=" * 40)
    
    settings = Settings()
    client = WebSocketClient(settings)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        shop_data = await client.fetch_shop_data()
        
        if not shop_data:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
            return
        
        # –ò—â–µ–º Advanced Sprinkler
        advanced_sprinkler = None
        for item in shop_data.items:
            if item.name == "Advanced Sprinkler":
                advanced_sprinkler = item
                break
        
        if advanced_sprinkler:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω: {advanced_sprinkler.name}")
            print(f"   –¢–∏–ø: {advanced_sprinkler.type.value}")
            print(f"   –†–µ–¥–∫–æ—Å—Ç—å: {advanced_sprinkler.rarity.value}")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {advanced_sprinkler.quantity}")
            print(f"   –í –Ω–∞–ª–∏—á–∏–∏: {'‚úÖ' if advanced_sprinkler.in_stock else '‚ùå'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –±–∞–∑–µ
            static_rarity = StaticRarityDatabase.get_item_rarity("Advanced Sprinkler", ItemType.GEAR)
            print(f"   –†–µ–¥–∫–æ—Å—Ç—å –≤ –±–∞–∑–µ: {static_rarity.value}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
            filter_instance = RobloxGardenFilter.create_combined_filter()
            passes_filter = filter_instance.should_include(advanced_sprinkler)
            print(f"   –ü—Ä–æ—Ö–æ–¥–∏—Ç —Ñ–∏–ª—å—Ç—Ä Divine+: {'‚úÖ' if passes_filter else '‚ùå'}")
            
            # –û–±—ä—è—Å–Ω—è–µ–º –ø–æ—á–µ–º—É
            if not passes_filter:
                print(f"   ‚ùå –ù–ï –ø—Ä–æ—Ö–æ–¥–∏—Ç, —Ç–∞–∫ –∫–∞–∫ {advanced_sprinkler.rarity.value} < Divine")
                print(f"   üìù –ù—É–∂–Ω–∞ —Ä–µ–¥–∫–æ—Å—Ç—å Divine –∏–ª–∏ –≤—ã—à–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏")
            
        else:
            print("‚ùå Advanced Sprinkler –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö")
            print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ gear –ø—Ä–µ–¥–º–µ—Ç—ã:")
            for item in shop_data.items:
                if item.type.value == "gear":
                    print(f"  ‚Ä¢ {item.name} [{item.rarity.value}]")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        await client.close()

if __name__ == "__main__":
    asyncio.run(check_advanced_sprinkler())
