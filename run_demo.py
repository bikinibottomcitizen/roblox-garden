#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ Roblox Garden –±–µ–∑ Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.
–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç–ª–∞–¥–∫–∏.
"""

import asyncio
import os
from datetime import datetime
from roblox_garden.config.settings import Settings
from roblox_garden.websocket.client import WebSocketClient
from roblox_garden.filters.item_filters import RobloxGardenFilter
from roblox_garden.utils.formatters import MessageFormatter


async def run_parser_demo():
    """–ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º–µ –±–µ–∑ Telegram."""
    print("üöÄ Roblox Garden Parser - –î–µ–º–æ —Ä–µ–∂–∏–º")
    print("=" * 50)
    print("üìå –ó–∞–ø—É—Å–∫ –±–µ–∑ Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("üìå –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Divine+ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥")
    print("üìå –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    print("=" * 50)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ mock –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –¥–µ–º–æ
    os.environ.update({
        'TELEGRAM_BOT_TOKEN': 'demo_token',
        'TELEGRAM_FULL_CHANNEL_ID': '-1001234567890',
        'TELEGRAM_UPDATES_CHANNEL_ID': '-1001234567891',
        'LOG_LEVEL': 'INFO'
    })
    
    settings = Settings()
    client = WebSocketClient(settings)
    filter_instance = RobloxGardenFilter.create_combined_filter()
    formatter = MessageFormatter(settings)
    
    previous_items = set()
    iteration = 0
    
    try:
        await client.connect()
        
        while True:
            iteration += 1
            current_time = datetime.now().strftime("%H:%M:%S")
            
            print(f"\nüïê –ò—Ç–µ—Ä–∞—Ü–∏—è {iteration} - {current_time}")
            print("-" * 40)
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            shop_data = await client.fetch_shop_data()
            
            if not shop_data:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
                await asyncio.sleep(30)
                continue
            
            # –§–∏–ª—å—Ç—Ä—É–µ–º Divine+ –ø—Ä–µ–¥–º–µ—Ç—ã
            filtered_items = shop_data.get_filtered_items(filter_instance)
            current_items = set()
            
            print(f"üì¶ –í—Å–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ: {len(shop_data.items)}")
            print(f"‚ú® Divine+ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: {len(filtered_items)}")
            
            if filtered_items:
                print("\nüîç Divine+ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –Ω–∞–ª–∏—á–∏–∏:")
                for item in filtered_items:
                    item_key = f"{item.name}_{item.quantity}_{item.in_stock}"
                    current_items.add(item_key)
                    
                    status_icon = "‚úÖ" if item.in_stock else "‚ùå"
                    print(f"  {status_icon} {item.name} [{item.rarity.value}] - {item.quantity} —à—Ç.")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                new_items_msg = formatter.format_new_items_message(filtered_items[:3])  # –ü–µ—Ä–≤—ã–µ 3
                full_report_msg = formatter.format_full_report_message(filtered_items, shop_data.timestamp)
                
                print(f"\nüì® –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–∞–Ω–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:")
                print("-" * 30)
                print(new_items_msg)
                
                print(f"\nüìã –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç:")
                print("-" * 30)
                print(full_report_msg)
            else:
                print("  üîç –ù–µ—Ç Divine+ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if iteration > 1:
                if current_items != previous_items:
                    print("\nüö® –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ò–ó–ú–ï–ù–ï–ù–ò–Ø –í –°–¢–û–ö–ï:")
                    added = current_items - previous_items
                    removed = previous_items - current_items
                    
                    if added:
                        print("  ‚ûï –ù–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã:", ", ".join([item.split("_")[0] for item in added]))
                    if removed:
                        print("  ‚ûñ –£–±—Ä–∞–Ω–æ –∏–∑ —Å—Ç–æ–∫–∞:", ", ".join([item.split("_")[0] for item in removed]))
                        
                    # –í —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ –∑–¥–µ—Å—å –±—ã –æ—Ç–ø—Ä–∞–≤–ª—è–ª–æ—Å—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
                    print("  üì± (–í –±–æ–µ–≤–æ–º —Ä–µ–∂–∏–º–µ –±—ã–ª–æ –±—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram)")
                else:
                    print("\nüîÑ –°—Ç–æ–∫ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è")
            
            previous_items = current_items
            
            print(f"\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (30 —Å–µ–∫)...")
            await asyncio.sleep(30)
    
    except KeyboardInterrupt:
        print("\n\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        await client.close()
        print("\n‚úÖ –ü–∞—Ä—Å–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")
        print("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Roblox Garden Parser! üå±")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    await run_parser_demo()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
